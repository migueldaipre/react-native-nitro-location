///
/// NitroLocation-Swift-Cxx-Bridge.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#pragma once

// Forward declarations of C++ defined types
// Forward declaration of `Accuracy` to properly resolve imports.
namespace margelo::nitro::nitro_location { enum class Accuracy; }
// Forward declaration of `HybridLocationResultSpecSwift` to properly resolve imports.
namespace margelo::nitro::nitro_location { class HybridLocationResultSpecSwift; }
// Forward declaration of `HybridLocationResultSpec` to properly resolve imports.
namespace margelo::nitro::nitro_location { class HybridLocationResultSpec; }

// Include C++ defined types
#if __has_include("Accuracy.hpp")
 #include "Accuracy.hpp"
#endif
#if __has_include("HybridLocationResultSpec.hpp")
 #include "HybridLocationResultSpec.hpp"
#endif
#if __has_include("HybridLocationResultSpecSwift.hpp")
 #include "HybridLocationResultSpecSwift.hpp"
#endif
#if __has_include(<NitroModules/PromiseHolder.hpp>)
 #include <NitroModules/PromiseHolder.hpp>
#endif
#if __has_include(<future>)
 #include <future>
#endif
#if __has_include(<memory>)
 #include <memory>
#endif
#if __has_include(<optional>)
 #include <optional>
#endif

/**
 * Contains specialized versions of C++ templated types so they can be accessed from Swift,
 * as well as helper functions to interact with those C++ types from Swift.
 */
namespace margelo::nitro::nitro_location::bridge::swift {

  /**
   * Specialized version of `PromiseHolder<std::shared_ptr<margelo::nitro::nitro_location::HybridLocationResultSpec>>`.
   */
  using PromiseHolder_std__shared_ptr_margelo__nitro__nitro_location__HybridLocationResultSpec__ = PromiseHolder<std::shared_ptr<margelo::nitro::nitro_location::HybridLocationResultSpec>>;
  inline PromiseHolder<std::shared_ptr<margelo::nitro::nitro_location::HybridLocationResultSpec>> create_PromiseHolder_std__shared_ptr_margelo__nitro__nitro_location__HybridLocationResultSpec__() {
    return PromiseHolder<std::shared_ptr<margelo::nitro::nitro_location::HybridLocationResultSpec>>();
  }
  
  /**
   * Specialized version of `std::optional<Accuracy>`.
   */
  using std__optional_Accuracy_ = std::optional<Accuracy>;
  inline std::optional<Accuracy> create_std__optional_Accuracy_(const Accuracy& value) {
    return std::optional<Accuracy>(value);
  }
  
  /**
   * Specialized version of `std::optional<double>`.
   */
  using std__optional_double_ = std::optional<double>;
  inline std::optional<double> create_std__optional_double_(const double& value) {
    return std::optional<double>(value);
  }
  
  /**
   * Specialized version of `std::optional<bool>`.
   */
  using std__optional_bool_ = std::optional<bool>;
  inline std::optional<bool> create_std__optional_bool_(const bool& value) {
    return std::optional<bool>(value);
  }

} // namespace margelo::nitro::nitro_location::bridge::swift
