///
/// HybridLocationCoordsSpec.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#pragma once

#if __has_include(<NitroModules/HybridObject.hpp>)
#include <NitroModules/HybridObject.hpp>
#else
#error NitroModules cannot be found! Are you sure you installed NitroModules properly?
#endif



#include <optional>

namespace margelo::nitro::nitro_location {

  using namespace margelo::nitro;

  /**
   * An abstract base class for `LocationCoords`
   * Inherit this class to create instances of `HybridLocationCoordsSpec` in C++.
   * @example
   * ```cpp
   * class HybridLocationCoords: public HybridLocationCoordsSpec {
   *   // ...
   * };
   * ```
   */
  class HybridLocationCoordsSpec: public virtual HybridObject {
    public:
      // Constructor
      explicit HybridLocationCoordsSpec(): HybridObject(TAG) { }

      // Destructor
      virtual ~HybridLocationCoordsSpec() { }

    public:
      // Properties
      virtual std::optional<double> getAccuracy() = 0;
      virtual std::optional<double> getAltitude() = 0;
      virtual double getLatitude() = 0;
      virtual double getLongitude() = 0;

    public:
      // Methods
      

    protected:
      // Hybrid Setup
      void loadHybridMethods() override;

    protected:
      // Tag for logging
      static constexpr auto TAG = "LocationCoords";
  };

} // namespace margelo::nitro::nitro_location
