///
/// JHybridLocationResultSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#include "JHybridLocationResultSpec.hpp"

// Forward declaration of `HybridLocationCoordsSpec` to properly resolve imports.
namespace margelo::nitro::nitro_location { class HybridLocationCoordsSpec; }

#include <memory>
#include "HybridLocationCoordsSpec.hpp"
#include "JHybridLocationCoordsSpec.hpp"
#include <NitroModules/JNISharedPtr.hpp>
#include <optional>

namespace margelo::nitro::nitro_location {

  jni::local_ref<JHybridLocationResultSpec::jhybriddata> JHybridLocationResultSpec::initHybrid(jni::alias_ref<jhybridobject> jThis) {
    return makeCxxInstance(jThis);
  }

  void JHybridLocationResultSpec::registerNatives() {
    registerHybrid({
      makeNativeMethod("initHybrid", JHybridLocationResultSpec::initHybrid),
    });
  }

  size_t JHybridLocationResultSpec::getExternalMemorySize() noexcept {
    static const auto method = _javaPart->getClass()->getMethod<jlong()>("getMemorySize");
    return method(_javaPart);
  }

  // Properties
  std::shared_ptr<margelo::nitro::nitro_location::HybridLocationCoordsSpec> JHybridLocationResultSpec::getCoords() {
    static const auto method = _javaPart->getClass()->getMethod<jni::local_ref<JHybridLocationCoordsSpec::javaobject>()>("getCoords");
    auto result = method(_javaPart);
    return JNISharedPtr::make_shared_from_jni<JHybridLocationCoordsSpec>(jni::make_global(result));
  }
  double JHybridLocationResultSpec::getTimestamp() {
    static const auto method = _javaPart->getClass()->getMethod<double()>("getTimestamp");
    auto result = method(_javaPart);
    return result;
  }
  std::optional<bool> JHybridLocationResultSpec::getMocked() {
    static const auto method = _javaPart->getClass()->getMethod<jni::local_ref<jni::JBoolean>()>("getMocked");
    auto result = method(_javaPart);
    return result != nullptr ? std::make_optional(result->value()) : std::nullopt;
  }

  // Methods
  

} // namespace margelo::nitro::nitro_location
